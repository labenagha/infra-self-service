# .github/workflows/provision-servicebus.yml

name: Provision Service Bus Topic

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment (e.g. dev or test)'
        required: true
      resourceName:
        description: 'Service Bus Topic Name'
        required: true
      messageRetention:
        description: 'Message Retention (Days), default 7'
        required: false
        default: '7'
      maxSizeInMegabytes:
        description: 'Max Size in MB, default 1024'
        required: false
        default: '1024'
      requiresDuplicateDetection:
        description: 'Enable duplicate detection (true/false)'
        required: false
        default: 'false'

jobs:
  provision_servicebus:
    runs-on: ubuntu-latest

    steps:
      # 1) Check out the repository
      - name: Checkout
        uses: actions/checkout@v3

      # 2) Azure Login (Service Principal via JSON creds)
      - name: Azure Login
        uses: azure/login@v2
        with:
          # Save your SP credentials in the secret: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      # 3) Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      # 4) Terraform Init
      - name: Terraform Init
        run: |
          # Use the environment input to select your Terraform folder (e.g. dev or test)
          cd $GITHUB_WORKSPACE/modules/${{ github.event.inputs.environment }}
          terraform init

      # 5) Terraform Validate
      - name: Terraform Validate
        run: |
          cd $GITHUB_WORKSPACE/modules/${{ github.event.inputs.environment }}
          terraform validate

      # 6) Terraform Apply
      - name: Terraform Apply
        run: |
          cd $GITHUB_WORKSPACE/modules/${{ github.event.inputs.environment }}

          # Create a tfvars file from the user inputs
          echo "resource_name              = \"${{ github.event.inputs.resourceName }}\""       >  request.tfvars
          echo "message_retention          = \"${{ github.event.inputs.messageRetention }}\""   >> request.tfvars
          echo "max_size_megabytes         = \"${{ github.event.inputs.maxSizeInMegabytes }}\"" >> request.tfvars

          if [ "${{ github.event.inputs.requiresDuplicateDetection }}" = "true" ]; then
            echo "requires_duplicate_detection = true" >> request.tfvars
          else
            echo "requires_duplicate_detection = false" >> request.tfvars
          fi

          # Apply with the ephemeral tfvars file
          terraform apply -auto-approve -var-file=request.tfvars

      # 7) Completion
      - name: Done
        run: echo "âœ… Service Bus Topic provisioned successfully!"
