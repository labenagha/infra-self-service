name: Provision Storage Account

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target Environment'
        required: true
        type: string
      resourceName:
        description: 'Storage Account Name'
        required: true
        type: string
      accountKind:
        description: 'Storage Account Kind'
        required: false
        default: 'StorageV2'
        type: string
      accountTier:
        description: 'Account Tier'
        required: false
        default: 'Standard'
        type: string
      accountReplicationType:
        description: 'Account Replication Type'
        required: false
        default: 'LRS'
        type: string
      accessTier:
        description: 'Access Tier'
        required: false
        default: 'Hot'
        type: string
      httpsTrafficOnlyEnabled:
        description: 'HTTPS Traffic Only'
        required: false
        default: 'true'
        type: string
      minimumTlsVersion:
        description: 'Minimum TLS Version'
        required: false
        default: 'TLS1_2'
        type: string
      publicNetworkAccessEnabled:
        description: 'Public Network Access'
        required: false
        default: 'false'
        type: string
      sharedAccessKeyEnabled:
        description: 'Shared Access Key Enabled'
        required: false
        default: 'true'
        type: string
      defaultAction:
        description: 'Network Default Action'
        required: false
        default: 'Deny'
        type: string
      bypass:
        description: 'Network Bypass'
        required: false
        default: 'AzureServices'
        type: string
      softDeleteEnabled:
        description: 'Soft Delete Enabled'
        required: false
        default: 'true'
        type: string
      softDeleteRetentionDays:
        description: 'Soft Delete Retention Days'
        required: false
        default: '7'
        type: string

jobs:
  provision:
    name: Provision Storage Account
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Terraform Init
        run: |
          cd terraform/environments/${{ github.event.inputs.environment }}
          terraform init
      
      - name: Create Terraform Variables File
        run: |
          cd terraform/environments/${{ github.event.inputs.environment }}
          cat > storage-account.auto.tfvars <<EOF
          storage_account_name               = "${{ github.event.inputs.resourceName }}"
          account_kind                       = "${{ github.event.inputs.accountKind }}"
          account_tier                       = "${{ github.event.inputs.accountTier }}"
          account_replication_type           = "${{ github.event.inputs.accountReplicationType }}"
          access_tier                        = "${{ github.event.inputs.accessTier }}"
          https_traffic_only_enabled         = ${{ github.event.inputs.httpsTrafficOnlyEnabled }}
          minimum_tls_version                = "${{ github.event.inputs.minimumTlsVersion }}"
          public_network_access_enabled      = ${{ github.event.inputs.publicNetworkAccessEnabled }}
          shared_access_key_enabled          = ${{ github.event.inputs.sharedAccessKeyEnabled }}
          default_action                     = "${{ github.event.inputs.defaultAction }}"
          bypass                             = ["${{ github.event.inputs.bypass }}"]
          soft_delete_enabled                = ${{ github.event.inputs.softDeleteEnabled }}
          soft_delete_retention_days         = ${{ github.event.inputs.softDeleteRetentionDays }}
          EOF
      
      - name: Terraform Plan
        id: plan
        run: |
          cd terraform/environments/${{ github.event.inputs.environment }}
          terraform plan -out=tfplan
      
      - name: Terraform Apply
        id: apply
        if: success()
        run: |
          cd terraform/environments/${{ github.event.inputs.environment }}
          terraform apply -auto-approve tfplan
      
      - name: Create PR for State Changes
        if: success()
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Add Storage Account ${{ github.event.inputs.resourceName }} to ${{ github.event.inputs.environment }}"
          title: "Add Storage Account ${{ github.event.inputs.resourceName }} to ${{ github.event.inputs.environment }}"
          body: |
            This PR was automatically created by the Infrastructure Self-Service Portal.
            
            Storage Account Details:
            - Name: ${{ github.event.inputs.resourceName }}
            - Environment: ${{ github.event.inputs.environment }}
            - Kind: ${{ github.event.inputs.accountKind }}
            - Access Tier: ${{ github.event.inputs.accessTier }}
            
            Requested by: ${{ github.actor }}
          branch: add-storage-account-${{ github.event.inputs.resourceName }}
          base: main